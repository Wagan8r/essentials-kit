# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

executors:
  java:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
  node:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo

commands:
  save-cache:
    steps:
      - save_cache:
          paths:
            - ~/.gradlew
          key: v1-dependencies-{{ checksum "build.gradle" }}
  restore-cache:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
  gradle-deps:
    steps:
      - run: ./gradlew dependencies
  init-gradle:
    steps:
      - checkout
      - restore-cache
      - gradle-deps
      - save-cache
  attach-workspace:
    steps:
      - attach_workspace:
          at: ~/workspace
      - run: cat ~/workspace/release-version
  save-release-version-to-workspace:
    parameters:
      release-version:
        type: string
    steps:
      - run: mkdir -p ~/workspace
      - run: echo << parameters.release-version >> > ~/workspace/release-version
      - run: cat ~/workspace/release-version
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - release-version
  publish:
    parameters:
      version:
        type: string
    steps:
      - run: echo "<< parameters.version >> "
      - when:
          condition:
            - not:
              equal: [ "0.0.0-dev", << parameters.version >> ]
          steps:
            - init-gradle
            - run: ./gradlew publish
      - unless:
          condition:
            equal: [ "0.0.0-dev", << parameters.version >> ]
            steps:
              - run: echo "No changes to publish."

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - init-gradle

      # run tests!
      - run: ./gradlew test
      - run: ./gradlew jacocoTestReport
      - run: bash <(curl -s https://codecov.io/bash)
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  create-version:
    executor: node
    steps:
      - checkout
      - run: npm i
      - run: echo "export GH_TOKEN=$GITHUB_ACCESS_TOKEN" >> $BASH_ENV
      - run: echo "export NPM_TOKEN=$GITHUB_ACCESS_TOKEN" >> $BASH_ENV
      - run: npm run release
      - run: echo "export RELEASE_VERSION=$(node -p 'require("./package").version')" >> $BASH_ENV
      - run: cat $BASH_ENV
      - save-release-version-to-workspace:
          release-version: $RELEASE_VERSION
  build-and-publish:
    executor: java
    steps:
      - attach-workspace
      - run: echo "export RELEASE_VERSION=$(cat ~/workspace/release-version)" >> $BASH_ENV
      - run: cat $BASH_ENV
      - publish:
          version: $RELEASE_VERSION

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - create-version:
          requires:
            - build
          filters:
            branches:
              only: master
      - build-and-publish:
          requires:
            - create-version